// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version (devel) DO NOT EDIT.
package openapi

import (
	"time"
)

// DeliveryMethod defines model for DeliveryMethod.
type DeliveryMethod struct {
	// ID A short string representing the delivery method. This is what goes into the DeliveryMethod fields.
	ID string `json:"id"`

	// Units The units of the delivery method.
	Units string `json:"units"`

	// Name The full name of the delivery method.
	Name string `json:"name"`

	// Description A description of the delivery method.
	Description string `json:"description,omitempty"`
}

// Dosage defines model for Dosage.
type Dosage struct {
	// DeliveryMethod The delivery method to use.
	DeliveryMethod string `json:"deliveryMethod"`

	// Dose The dosage amount.
	Dose float32 `json:"dose"`

	// Interval The interval between doses in days.
	Interval float64 `json:"interval"`

	// Concurrence The number of estrogen patches on the body at once. Only relevant if delivery method is patch.
	Concurrence *int `json:"concurrence,omitempty"`
}

// DosageHistory defines model for DosageHistory.
type DosageHistory = []DosageObservation

// DosageObservation defines model for DosageObservation.
type DosageObservation struct {
	// ID The unique identifier for the observation.
	ID int64 `json:"id"`

	// DeliveryMethod The delivery method used.
	DeliveryMethod string `json:"deliveryMethod"`

	// Dose The dosage amount.
	Dose float32 `json:"dose"`

	// TakenAt The time the dosage was taken.
	TakenAt time.Time `json:"takenAt"`

	// TakenOffAt The time the dosage was taken off. This is only relevant for patch delivery methods.
	TakenOffAt *time.Time `json:"takenOffAt,omitempty"`

	// Comment A comment about the dosage, if any.
	Comment *string `json:"comment,omitempty"`
}

// DosageParams defines parameters for Dosage.
type DosageParams struct {
	HistoryStart *time.Time `form:"historyStart,omitempty" json:"historyStart,omitempty"`
	HistoryEnd   *time.Time `form:"historyEnd,omitempty" json:"historyEnd,omitempty"`
}

// ForgetDosesParams defines parameters for ForgetDoses.
type ForgetDosesParams struct {
	DoseIds []int64 `form:"dose_ids" json:"dose_ids"`
}

// RecordDoseJSONBody defines parameters for RecordDose.
type RecordDoseJSONBody struct {
	// TakenAt The time the dosage was taken.
	TakenAt time.Time `json:"takenAt"`
}

// EditDoseJSONBody defines parameters for EditDose.
type EditDoseJSONBody = DosageObservation

// SetDosageJSONRequestBody defines body for SetDosage for application/json ContentType.
type SetDosageJSONRequestBody = Dosage

// RecordDoseJSONRequestBody defines body for RecordDose for application/json ContentType.
type RecordDoseJSONRequestBody RecordDoseJSONBody

// EditDoseJSONRequestBody defines body for EditDose for application/json ContentType.
type EditDoseJSONRequestBody = EditDoseJSONBody

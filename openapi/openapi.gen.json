{
  "info": {
    "title": "e2clicker service",
    "version": "0"
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A message describing the error"
          },
          "details": {
            "description": "Additional details about the error"
          },
          "internal": {
            "type": "boolean",
            "description": "Whether the error is internal"
          },
          "internalCode": {
            "type": "string",
            "description": "An internal code for the error (useless for clients)"
          }
        },
        "required": [
          "message"
        ]
      },
      "UserSecret": {
        "description": "A secret and unique user identifier. This secret is generated once and never changes. It is used to both authenticate and identify a user, so it should be kept secret.",
        "type": "string",
        "x-go-type": "user.Secret",
        "x-go-type-import": {
          "path": "libdb.so/e2clicker/services/user",
          "name": "userservice"
        }
      },
      "Locale": {
        "description": "A locale identifier.",
        "type": "string",
        "x-go-type": "user.Locale",
        "x-go-type-import": {
          "path": "libdb.so/e2clicker/services/user",
          "name": "userservice"
        }
      },
      "User": {
        "description": "A user of the system.",
        "type": "object",
        "required": [
          "name",
          "locale",
          "has_avatar"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The user's name"
          },
          "locale": {
            "$ref": "#/components/schemas/Locale"
          },
          "has_avatar": {
            "type": "boolean",
            "description": "Whether the user has an avatar."
          }
        }
      },
      "Session": {
        "description": "A session for a user.",
        "type": "object",
        "required": [
          "id",
          "created_at",
          "expires_at"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "The session identifier"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the session was created"
          },
          "last_used": {
            "type": "string",
            "format": "date-time",
            "description": "The last time the session was used"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the session expires"
          }
        }
      }
    },
    "responses": {
      "ErrorResponse": {
        "description": "The request is invalid.\n",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "openapi": "3.0.0",
  "paths": {
    "/register": {
      "post": {
        "summary": "Register a new account",
        "operationId": "register",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name to register with"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/User"
                    },
                    {
                      "type": "object",
                      "required": [
                        "secret"
                      ],
                      "properties": {
                        "secret": {
                          "$ref": "#/components/schemas/UserSecret"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/auth": {
      "post": {
        "summary": "Authenticate a user and obtain a session",
        "operationId": "auth",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "secret"
                ],
                "properties": {
                  "secret": {
                    "$ref": "#/components/schemas/UserSecret"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "User-Agent",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The user agent of the client making the request."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged in.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "token"
                  ],
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "The session token"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/me": {
      "get": {
        "summary": "Get the current user",
        "operationId": "currentUser",
        "responses": {
          "200": {
            "description": "Successfully retrieved the current user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/me/avatar": {
      "get": {
        "summary": "Get the current user's avatar",
        "operationId": "currentUserAvatar",
        "responses": {
          "200": {
            "description": "Successfully retrieved the user's avatar.",
            "content": {
              "image/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "post": {
        "summary": "Set the current user's avatar",
        "operationId": "setCurrentUserAvatar",
        "requestBody": {
          "content": {
            "image/*": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully set the user's avatar."
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/me/secret": {
      "get": {
        "summary": "Get the current user's secret",
        "operationId": "currentUserSecret",
        "responses": {
          "200": {
            "description": "Successfully retrieved the user's secret.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "secret"
                  ],
                  "properties": {
                    "secret": {
                      "$ref": "#/components/schemas/UserSecret"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    }
  }
}

# yaml-language-server: $schema=https://raw.githubusercontent.com/OAI/OpenAPI-Specification/ba055ca00cbd735dceef4ed7c9db024cd9bfcd1a/schemas/v3.0/schema.json
openapi: 3.0.0

info:
  title: user
  version: ""

paths:
  /register:
    post:
      summary: Register a new account
      operationId: register
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
                  description: The name to register with
      responses:
        "200":
          description: >-
            Successfully logged in.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/User"
                  - type: object
                    required: [secret]
                    properties:
                      secret:
                        $ref: "#/components/schemas/UserSecret"
        default:
          $ref: "./_base.yml#/components/responses/ErrorResponse"

  /auth:
    post:
      summary: Authenticate a user and obtain a session
      operationId: auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [secret]
              properties:
                secret:
                  $ref: "#/components/schemas/UserSecret"
      parameters:
        - in: header
          name: User-Agent
          schema:
            type: string
          required: false
          description: >-
            The user agent of the client making the request.
      responses:
        "200":
          description: >-
            Successfully logged in.
          content:
            application/json:
              schema:
                type: object
                required: [token]
                properties:
                  token:
                    type: string
                    description: >-
                      The session token
        default:
          $ref: "./_base.yml#/components/responses/ErrorResponse"

  /me:
    get:
      summary: Get the current user
      operationId: currentUser
      responses:
        "200":
          description: >-
            Successfully retrieved the current user.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/User"
                  - type: object
                    required: [secret]
                    properties:
                      secret:
                        $ref: "#/components/schemas/UserSecret"
        default:
          $ref: "./_base.yml#/components/responses/ErrorResponse"

  /me/sessions:
    get:
      summary: List the current user's sessions
      operationId: currentUserSessions
      responses:
        "200":
          description: >-
            Successfully retrieved the user's sessions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Session"
        default:
          $ref: "./_base.yml#/components/responses/ErrorResponse"
    delete:
      summary: Delete one of the current user's sessions
      operationId: deleteUserSession
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
            description: >-
              The session identifier to delete
      responses:
        "204":
          description: >-
            Successfully deleted the user's sessions.
        default:
          $ref: "./_base.yml#/components/responses/ErrorResponse"

components:
  schemas:
    UserSecret:
      description: >-
        A secret and unique user identifier. This secret is generated once and
        never changes. It is used to both authenticate and identify a user, so
        it should be kept secret.
      type: string
      x-go-type: user.Secret
      x-go-type-import:
        path: e2clicker.app/services/user
        name: userservice

    Locale:
      description: >-
        A locale identifier.
      type: string
      x-go-type: user.Locale
      x-go-type-import:
        path: e2clicker.app/services/user
        name: userservice

    User:
      description: >-
        A user of the system.
      type: object
      required: [name, locale]
      properties:
        name:
          type: string
          description: The user's name
          x-order: 1
        locale:
          $ref: "#/components/schemas/Locale"
          x-order: 2

    Session:
      description: >-
        A session for a user.
      type: object
      required: [id, createdAt, lastUsed]
      properties:
        id:
          type: integer
          format: int64
          description: The session identifier
          x-order: 1
        createdAt:
          type: string
          format: date-time
          description: >-
            The time the session was created
          x-order: 2
          x-go-type-skip-optional-pointer: true
        lastUsed:
          type: string
          format: date-time
          description: >-
            The last time the session was used
          x-order: 3
          x-go-type-skip-optional-pointer: true
        expiresAt:
          type: string
          format: date-time
          description: >-
            The time the session expires, or null if it never expires
          x-order: 4
          x-go-type-skip-optional-pointer: true

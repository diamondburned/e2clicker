@use "sass:map";
@use "@picocss/pico/scss/pico" as * with (
  $theme-color: "pink",
  $enable-responsive-spacings: true,
  $enable-responsive-typography: true,
  $enable-semantic-container: false,
  $modules: (
    "themes/default": false,
  ),
  // Font scaling is disabled in these breakpoints because we're handling them
  // on our own with clamp().
  $breakpoints:
    (
      // Small (landscape phones)
      sm: (breakpoint: 576px, viewport: 510px, root-font-size: 100%),
      // Medium (tablets)
      md: (breakpoint: 768px, viewport: 700px, root-font-size: 100%),
      // Large
      lg: (breakpoint: 1024px, viewport: 950px, root-font-size: 100%),
      // Extra large
      xl: (breakpoint: 1280px, viewport: 1200px, root-font-size: 100%),
      // Same as Extra large, but pico.css uses this.
      xxl: (breakpoint: 1280px, viewport: 1200px, root-font-size: 100%),
    )
);
@use "theme/styles";
@use "theme/schemes";
@use "@picocss/pico/scss/colors" as *;
@use "@picocss/pico/scss/colors/utilities";
@use "@picocss/pico/scss/settings" as *;

html {
  height: 100%;

  scroll-behavior: smooth;
  @media screen and (prefers-reduced-motion: reduce) {
    scroll-behavior: auto;
  }
}

body {
  min-height: 100%;
  overflow-x: hidden;

  display: flex;
  flex-direction: column;
}

main {
  margin-top: var(--pico-block-spacing-vertical);
}

* {
  box-sizing: border-box;
}

a,
a:hover {
  text-decoration: none;
}

:not(mark):not(button):not([role="button"]) {
  @at-root .primary#{&} {
    color: var(--pico-color);

    &:not(.inverted) {
      --pico-color: var(--pico-primary);
    }

    &.inverted {
      --pico-color: var(--pico-primary-inverse);
      background-color: var(--pico-primary-background);
    }
  }

  @at-root .secondary#{&} {
    color: var(--pico-color);

    &:not(.inverted) {
      --pico-color: var(--pico-secondary);
    }

    &.inverted {
      --pico-color: var(--pico-secondary-inverse);
      background-color: var(--pico-secondary-background);
    }

    a {
      color: var(--pico-secondary);

      &:hover {
        color: var(--pico-secondary-hover);
      }
      &:focus {
        color: var(--pico-secondary-focus);
      }
    }
  }
}

mark {
  &.primary {
    color: var(--pico-primary-inverse);
    background-color: var(--pico-primary-background);
  }

  &.secondary {
    color: var(--pico-secondary-inverse);
    background-color: var(--pico-secondary-background);
  }
}

.brand {
  color: var(--pico-primary);
  text-shadow: 0 0 0.25em color-mix(in srgb, var(--pico-primary), transparent 65%);
}

.small-heading {
  font-size: inherit;
}

.spaced {
  & > * {
    margin-bottom: var(--pico-block-spacing-vertical);
  }

  &-2 > * {
    margin-bottom: calc(2 * var(--pico-block-spacing-vertical));
  }

  &-0 > * {
    margin-bottom: calc(var(--pico-block-spacing-vertical) / 2);
  }

  & > *:last-child {
    margin-bottom: 0;
  }
}

.muted {
  color: var(--pico-muted-color);
}

article {
  > header,
  > footer {
    background: none;
  }

  > header {
    border-bottom: var(--pico-border-width) solid var(--pico-card-sectioning-background-color);
  }
}

button,
[type="submit"],
[type="reset"],
[type="button"],
[type="file"]::file-selector-button,
[role="button"] {
  font-size: 1em;
}

button.minimal {
  background: none;
  border: none;
  box-shadow: none;
  padding: 0;
  color: currentColor;
  text-decoration: underline dashed;

  &:hover {
    text-decoration: underline solid;
    color: var(--pico-primary-hover);
  }
}

button.outline {
  --button-background: var(--pico-primary-background);
  --pico-button-outline-hover-background: color-mix(
    in srgb,
    var(--button-background),
    transparent 90%
  );

  &:hover {
    background-color: var(--pico-button-outline-hover-background);
  }

  &.secondary {
    --button-background: var(--pico-secondary-background);
  }
}

table.rounded {
  border-radius: var(--pico-border-radius);
  overflow: hidden;

  tbody tr:last-child {
    th,
    td {
      border: none;
    }
  }
}

mark {
  padding-top: 0;
  padding-bottom: 0;
}

section.as-card {
  padding: var(--pico-block-spacing-vertical) var(--pico-block-spacing-horizontal);
  margin-top: calc(-1 * var(--pico-block-spacing-vertical));
  margin-bottom: calc(-1 * var(--pico-block-spacing-vertical));

  border: var(--pico-border-width) solid transparent;
  border-radius: var(--pico-border-radius);

  @media (max-width: map.get(map.get($breakpoints, "sm"), "breakpoint")) {
    padding: 0;
  }
}

article:target,
section.as-card:target {
  border-color: var(--pico-primary);
}

blockquote.popping {
  border: var(--pico-border-width) solid var(--pico-primary);
  border-radius: var(--pico-border-radius);
  background-color: color-mix(in srgb, var(--pico-primary), transparent 90%);
  margin: var(--pico-block-spacing-vertical) 0;
  box-shadow: var(--pico-card-box-shadow);

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    margin-bottom: 0.5em;
  }
}
